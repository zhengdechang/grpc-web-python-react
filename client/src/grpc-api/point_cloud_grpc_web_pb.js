/**
 * @fileoverview gRPC-Web generated client stub for pointcloud
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.2
// 	protoc              v3.19.1
// source: point_cloud.proto

/* eslint-disable */
// @ts-nocheck

const grpc = {}
grpc.web = require('grpc-web')

const proto = {}
proto.pointcloud = require('./point_cloud_pb.js')

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.pointcloud.PointCloudStreamServiceClient = function (
  hostname,
  credentials,
  options
) {
  if (!options) options = {}
  options.format = 'text'

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options)

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '')
}

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.pointcloud.PointCloudStreamServicePromiseClient = function (
  hostname,
  credentials,
  options
) {
  if (!options) options = {}
  options.format = 'text'

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options)

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '')
}

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.pointcloud.PointCloudRequest,
 *   !proto.pointcloud.PointCloudResponse>}
 */
const methodDescriptor_PointCloudStreamService_GetStreamPointCloud =
  new grpc.web.MethodDescriptor(
    '/pointcloud.PointCloudStreamService/GetStreamPointCloud',
    grpc.web.MethodType.SERVER_STREAMING,
    proto.pointcloud.PointCloudRequest,
    proto.pointcloud.PointCloudResponse,
    /**
     * @param {!proto.pointcloud.PointCloudRequest} request
     * @return {!Uint8Array}
     */
    function (request) {
      return request.serializeBinary()
    },
    proto.pointcloud.PointCloudResponse.deserializeBinary
  )

/**
 * @param {!proto.pointcloud.PointCloudRequest} request The request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!grpc.web.ClientReadableStream<!proto.pointcloud.PointCloudResponse>}
 *     The XHR Node Readable Stream
 */
proto.pointcloud.PointCloudStreamServiceClient.prototype.getStreamPointCloud =
  function (request, metadata) {
    return this.client_.serverStreaming(
      this.hostname_ +
        '/pointcloud.PointCloudStreamService/GetStreamPointCloud',
      request,
      metadata || {},
      methodDescriptor_PointCloudStreamService_GetStreamPointCloud
    )
  }

/**
 * @param {!proto.pointcloud.PointCloudRequest} request The request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!grpc.web.ClientReadableStream<!proto.pointcloud.PointCloudResponse>}
 *     The XHR Node Readable Stream
 */
proto.pointcloud.PointCloudStreamServicePromiseClient.prototype.getStreamPointCloud =
  function (request, metadata) {
    return this.client_.serverStreaming(
      this.hostname_ +
        '/pointcloud.PointCloudStreamService/GetStreamPointCloud',
      request,
      metadata || {},
      methodDescriptor_PointCloudStreamService_GetStreamPointCloud
    )
  }

module.exports = proto.pointcloud
